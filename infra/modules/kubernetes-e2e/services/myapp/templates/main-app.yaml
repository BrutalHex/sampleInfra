apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.app.name}}"-deployment
  namespace: "{{ .Values.app.namespaces}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.app.name}}"
  template:
    metadata:
      labels:
        app: "{{ .Values.app.name}}"
    spec:
      containers:
      - name: "{{ .Values.app.name}}"-main
        image: "{{ .Values.app.image}}"
        env:
        - name: "CONNECTION_STRING"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgres.passwordSecretName}}"
              key: connection
        ports:
        - containerPort: 80
        volumeMounts:
        - name: "{{ .Values.app.name}}"-index
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "250Mi"
            cpu: "200m"
          limits:
            memory: "250Mi"
            cpu: "200m"
      volumes:
      - name: "{{ .Values.app.name}}"-index
        configMap:
          name: "{{ .Values.app.name}}"-index-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.app.name}}"-index-config
  namespace: "{{ .Values.app.namespaces}}"
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Welcome</title>
    </head>
    <body>
        <h1>Hello,!</h1>
        <p>This is my temporary app.</p>
    </body>
    </html>
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.app.name}}"-ingress
  namespace: "{{ .Values.app.namespaces}}"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: "{{ .Values.ingress.className }}"
  rules:
  - host: "{{ .Values.ingress.url }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{ .Values.app.name}}"
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.app.name}}"
  namespace: "{{ .Values.app.namespaces}}"
spec:
  selector:
    app: "{{ .Values.app.name}}"
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
